@{
    ViewData["Title"] = "AdminMainDetail";
}
@model BoardCreate.Models.ViewModels.BoardDetailsViewModel

@inject IHttpContextAccessor HttpContextAccessor
<style>
    #container2 {
        display: flex;
        width: 1358px;
        border: 1px solid;
        border-color: lightgreen;
        height: 849px;
    }
    .col-3, .col-2, .col-9, .col-10, .col-12 {
        display: table-cell;
        border: 1px solid lightgray; /* 셀 테두리 */
    }
    #tableStyle{
        width: 100%;
        height: 100%;
        margin: 0;
        border-collapse: collapse;
    }

    #tableStyle > #row1 {
        height: 9%;
    }
    
    #tableStyle > #row2 {
        height: 6%;
    }
    
    #tableStyle > #row3 {
        height: 85%;
    }

    #tableStyle > #row1Col1 {
    }

    #tableStyle > #row1Col2 {
    }

    #row2Col1 {
    }

    #row2Col2 {
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
        align-items: center;
    }

</style>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div id="container2">
        <div class="table" id="tableStyle">
            <div class="row" id="row1">
                <div class="col-3" id="row1Col1">@Model.BoardSections.SectionName</div>
                <div class="col-9" id="row1Col2"></div>
            </div>
            <div class="row" id="row2">
                <div class="col-2" id="row2Col1">

                </div>
                <div class="col-9" id="row2Col2">
                    @foreach (var item in Model.BoardTabs)
                    {
                        <div style="display:flex">
                            <div>
                                @item.TabName
                            </div>
                            <div class="form-check form-switch" style="display: flex; justify-content: center;">
                                <input class="form-check-input" type="checkbox" id="@item.IDX" value="@item.TabStatus" @(item.TabStatus == 0 ? "checked" : "") onchange="TabupdateStatus(this)">
                            </div>
                        </div>
                    }
                </div>
                <div class="col-1" >
                    <button type="button" style="margin-left:15px" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#boardTabAdd">
                        추가
                    </button>
                </div>
            </div>
            <div class="row" id="row3">
                <div class="col-12">
                    @*아이프레임*@
                </div>
            </div>
        </div>
    </div>
</body>

<div class="modal fade" id="boardTabAdd" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">탭 추가</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3" style="display: flex">
                    <input type="text" style="width:80%; margin-right:10px" id="TabName" class="form-control" placeholder="탭 이름을 입력하시오" />
                    <button type="button" class="btn btn-primary" onclick="TabCreate(@Model.BoardSections.IDX)">추가</button>
                </div>
            </div>
        </div>
    </div>
</div>
    <script>
        'use strict';

    function TabCreate(sectionIDX) {
        let tabName = document.getElementById("TabName").value;

        $.ajax({
            url: "/Admin/AdminTabsInsertSingle",
            type: 'POST',
            data: {
                SectionIDX: sectionIDX,
                TabName: tabName
            },
            dataType: 'json',
            success: function (response) {
                if (response.isAvailable) {
                    alert("탭 추가 성공");
                    location.reload(); // 페이지 새로고침
                } else {
                    alert('갤러리 추가에 실패했습니다. 다시 시도해주세요.');
                }
            },
            error: function (xhr, status, error) {
                console.error('Error:', error);
                alert('서버 오류가 발생했습니다.');
            }
        });

    }

    function TabupdateStatus(TabCheckBox) {
        let checked = TabCheckBox.checked; 
        let checkedNumber = checked ? 0 : 1;
        const checkedIDX = TabCheckBox.id;

        $.ajax({
            url: "/Admin/AdminTabsStatusUpdate",
            type:'POST',
            data: {
                CheckedIDX: checkedIDX,
                CheckedNumber: checkedNumber
            },
            dataType: 'json',
            success: function (response) {
                if (response.isAvailable) {
                } 
                else {
                    location.reload();
                    alert('상태 변경 실패');
                }
            },
            error: function (xhr, status, error) {
                console.error('Error:', error);
                alert('서버 오류가 발생했습니다.');
            }
        });

    }

    </script>
